//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Индивидуалка_ООП
//  @ File Name : System.h
//  @ Date : 19.10.2018
//  @ Author : Andrew Bondar
//
//


#if !defined(_SYSTEM_H)
#define _SYSTEM_H

#include "Category.h"
#include "Subcategory.h"
#include "Goods.h"
#include <QMessageBox>

class System 
{
public:
	Category * firstCategory;//указатель на первую категорию
	int numberOfCategories;//кол-во категорий

	//Запись в файл
	void saveToFile();

	//Сохранение в файл
	void loadFromFile();

	//Поиск категории по ключу-имени. Аргументы: имя. Возвращает: ссылку на категорию.
	Category* findCategory(char* categoryName);

	//Поиск подкатегории по ключу-имени. Аргументы: имя, имя родительской категории. Возвращает: ссылку на подкатегорию.
	Subcategory* findSubcategory(char* subcategoryName, char *categoryName);

	//Поиск товара по ключу-имени. Аргументы: имя товара, имя родительской подкатегории, имя родительской категории. Возвращает: ссылку на товар.
	Goods* findGoods(char* goodsName, char* subcategoryName, char* categoryName);

	//Добавление новой категории. Аргументы: имя. Возвращает: ссылку на новую категорию.
	Category* addCategory(char* categoryName);

	//Добавление новой подкатегории. Аргументы: имя новой подкатегории, имя родительской категории. Возвращает: ссылку на новую подкатегорию.
	Subcategory* addSubcategory(char* subcategoryName, char* categoryName);

	//Добавление нового товара. Аргументы: кол-во товара, цена, имя товара, имя родительской подкатегории, имя родительской категории. Возвращает: ссылку на новый товар.
	Goods* addGoods(int amount, float price, char* goodsName, char* subcategoryName, char* categoryName);

	//Удаление категории по имени. Аргументы: имя категории.
	void deleteCategory(char* name);

	//Удаление подкатегории по имени. Аргументы: имя подкатегории, имя родительской категории.
	void deleteSubcategory(char* name, char* categoryName);

	//Удаление товара по имени. Аргументы: имя товара, имя родительской подкатегории, имя родительской категории.
	void deleteGoods(char* name, char* subcategoryName, char* categoryName);

	//Функция отображения всего дерева на консоль. С переходом на GUI удалить!
	void showAllInfo();

	//Конструктор управляющего объекта.
	System();

};

#endif  //_SYSTEM_H
